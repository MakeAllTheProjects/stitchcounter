[{"/mnt/c/Users/geeke/Dev/stitchcounter/client/src/index.js":"1","/mnt/c/Users/geeke/Dev/stitchcounter/client/src/App.js":"2","/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/PieceForm.jsx":"3","/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/PieceList.jsx":"4","/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/Counter.jsx":"5","/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/MessageBanner.jsx":"6"},{"size":197,"mtime":1615095146002,"results":"7","hashOfConfig":"8"},{"size":8466,"mtime":1615096330661,"results":"9","hashOfConfig":"8"},{"size":1998,"mtime":1615096136689,"results":"10","hashOfConfig":"8"},{"size":1208,"mtime":1615095146001,"results":"11","hashOfConfig":"8"},{"size":2828,"mtime":1615096159103,"results":"12","hashOfConfig":"8"},{"size":770,"mtime":1615095145998,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3b01rl",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},"/mnt/c/Users/geeke/Dev/stitchcounter/client/src/index.js",[],"/mnt/c/Users/geeke/Dev/stitchcounter/client/src/App.js",["30"],"/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/PieceForm.jsx",["31"],"import React, { useState, useContext, useEffect } from 'react'\nimport { GlobalContext } from '../App'\nimport './PieceForm.scss'\n\nexport default function PieceForm () {\n\tconst context = useContext(GlobalContext)\n\tconst { state, dispatch } = context\n\tconst [title, setTitle] = useState('')\n\tconst [qtyNeeded, setQtyNeeded] = useState(1)\n\tconst [totalRowCount, setTotalRowCount] = useState(1)\n\n\tuseEffect(() => {\n\t\tif (state.isEdit) {\n\t\t\tconst current = state.pieces[state.currentPiece]\n\t\t\tsetTitle(current.title)\n\t\t\tsetQtyNeeded(current.qtyNeeded)\n\t\t\tsetTotalRowCount(current.totalRowCount)\n\t\t}\n\t}, [state.isEdit])\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault()\n\t\tconst action = state.isEdit ? 'EDIT_PIECE' : 'ADD_PIECE'\n\t\tdispatch({\n\t\t\ttype: action,\n\t\t\tpayload: {\n\t\t\t\ttitle: title,\n\t\t\t\tqtyNeeded: qtyNeeded,\n\t\t\t\ttotalRowCount: totalRowCount\n\t\t\t}\n\t\t})\n\t\tsetTitle(\"\")\n\t\tsetQtyNeeded(1)\n\t\tsetTotalRowCount(1)\n\t}\n\n\treturn (\n\t\t<form className=\"piece-form\" onSubmit={e => handleSubmit(e)}>\n\t\t\t{state.pieces.length === 0 && <h3>You have no pieces in this project</h3>}\n\t\t\t<h2>Add a Piece to Project</h2>\n\t\t\t<label htmlFor=\"title\">Name of Piece</label>\n\t\t\t<input\n\t\t\t\tname=\"title\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={title}\n\t\t\t\tonChange={e => setTitle(e.target.value)}\n\t\t\t\tplaceholder=\"piece name\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<label htmlFor=\"qtyNeeded\">Number of Pieces Needed</label>\n\t\t\t<input\n\t\t\t\tname=\"qtyNeeded\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tvalue={qtyNeeded}\n\t\t\t\tonChange={e => setQtyNeeded(e.target.value)}\n\t\t\t\tplaceholder=\"number of pieces needed\"\n\t\t\t\tmin={1}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<label htmlFor=\"totalRowCount\">Number of Rows in Piece</label>\n\t\t\t<input\n\t\t\t\tname=\"totalRowCount\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tvalue={totalRowCount}\n\t\t\t\tonChange={e => setTotalRowCount(e.target.value)}\n\t\t\t\tplaceholder=\"number of rows in piece\"\n\t\t\t\tmin={1}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName=\"submit-button\"\n\t\t\t\ttype=\"submit\"\n\t\t\t\tvalue={`${state.isEdit ? 'Edit' : 'Add New'} Piece`}\n\t\t\t\tdisabled={title.length === 0}\n\t\t\t/>\n\t\t</form>\n\t)\n}\n",["32","33"],"/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/PieceList.jsx",[],"/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/Counter.jsx",["34","35"],"import React, { useContext, useEffect, useState } from 'react'\nimport { GlobalContext } from '../App'\n\nimport './Counter.scss'\nimport checked from '../assets/check.svg'\nimport unchecked from '../assets/dry-clean.svg'\nimport editIcon from '../assets/edit.svg'\nimport deleteIcon from '../assets/garbage.svg'\n\nexport default function Counter () {\n\tconst context = useContext(GlobalContext)\n\tconst { state, dispatch } = context\n\tconst [ finishedPieces, setFinishedPieces ] = useState([])\n\n\tconst markFinishedPieces = () => {\n\t\tconst newFinishedPieces = []\n\t\tfor (let i = 1; i <= state.pieces[state.currentPiece].qtyNeeded; i++) {\n\t\t\tnewFinishedPieces.push(i <= state.pieces[state.currentPiece].qtyMade)\n\t\t}\n\t\tsetFinishedPieces(newFinishedPieces)\n\t}\n\n\tuseEffect(() => {\n\t\tmarkFinishedPieces()\n\t}, [state.pieces[state.currentPiece]])\n\n\tconst handleCheckBox = (i, piece) => {\n\t\tpiece === true ? dispatch({ type: 'UNCHECK_OFF_PIECE' }) : dispatch({ type: 'CHECK_OFF_PIECE' })\n\t\tconst newFinishedPieces = finishedPieces\n\t\tnewFinishedPieces[i] = !piece\n\t\tsetFinishedPieces(newFinishedPieces)\n\t}\n\n\tconst handleKeyDown = (e) => {\n\t\tif (e.keyCode === 40) {\n\t\t\tdispatch({type: 'DECREASE_COUNT'})\n\t\t}\n\n\t\tif (e.keyCode === 38) {\n\t\t\tdispatch({ type: 'INCREASE_COUNT' })\n\t\t}\n\t}\n\n\treturn (\n\t\t<section className=\"counter\" onKeyDown={e => handleKeyDown(e)}>\n\t\t\t<div className=\"piece-control-panel\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"control-button edit\"\n\t\t\t\t\talt=\"edit piece\"\n\t\t\t\t\ttitle=\"edit piece\"\n\t\t\t\t\tsrc={editIcon}\n\t\t\t\t\tonClick={() => dispatch({\n\t\t\t\t\t\ttype: 'TOGGLE_FORM',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tisEdit: true\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"control-button delete\"\n\t\t\t\t\talt=\"delete piece\"\n\t\t\t\t\ttitle=\"delete piece\"\n\t\t\t\t\tsrc={deleteIcon}\n\t\t\t\t\tonClick={() => dispatch({\n\t\t\t\t\t\ttype: 'REMOVE_PIECE'\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<h1>{state.pieces[state.currentPiece].title ? state.pieces[state.currentPiece].title : \"Select a piece\"}</h1>\n\t\t\t<div className=\"made-checklist\">\n\t\t\t\t{finishedPieces.length > 0 && finishedPieces.map((piece, i) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tkey={`piece-check-${i}`}\n\t\t\t\t\t\tclassName=\"checked-item\"\n\t\t\t\t\t\tsrc={piece ? checked : unchecked}\n\t\t\t\t\t\talt=\"check piece status\"\n\t\t\t\t\t\ttitle=\"check piece status\"\n\t\t\t\t\t\tonClick={() => handleCheckBox(i, piece)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"count-container\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"add\"\n\t\t\t\t\tonClick={() => dispatch({ type: \"INCREASE_COUNT\" })}\n\t\t\t\t>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t\t<p className=\"count\">{state.pieces[state.currentPiece].currentCount}</p>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"subtract\"\n\t\t\t\t\tonClick={() => dispatch({ type: \"DECREASE_COUNT\"})}\n\t\t\t\t>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<p>of {state.pieces[state.currentPiece].totalRowCount}</p>\n\t\t\t<button className=\"reset-count\" onClick={() => dispatch({ type: \"RESET_COUNT\"})}>Reset Count</button>\n\t\t</section>\n\t)\n}","/mnt/c/Users/geeke/Dev/stitchcounter/client/src/components/MessageBanner.jsx",["36"],"import React, { useContext, useEffect, useState } from 'react'\nimport { GlobalContext } from '../App'\nimport './MessageBanner.scss'\n\nexport default function MessageBanner () {\n\tconst context = useContext(GlobalContext)\n\tconst { state, dispatch } = context\n\tconst [ opacity, setOpacity ] = useState(0)\n\n\tuseEffect(() => {\n\t\tif (state.message.length > 0) {\n\t\t\tsetOpacity(100)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetOpacity(75)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetOpacity(50)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetOpacity(25)\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetOpacity(0)\n\t\t\t\t\t\t}, 500)\n\t\t\t\t\t}, 500)\n\t\t\t\t}, 500)\n\t\t\t}, 5000)\n\t\t}\n\t}, [state.message])\n\n\treturn (\n\t\t<header\n\t\t\tclassName=\"message-banner\"\n\t\t\tstyle={{\n\t\t\t\tfilter: `opacity(${opacity}%)`\n\t\t\t}}\n\t\t>\n\t\t\t{ state.message }\n\t\t</header>\n\t)\n}",{"ruleId":"37","severity":1,"message":"38","line":221,"column":7,"nodeType":"39","endLine":221,"endColumn":106},{"ruleId":"40","severity":1,"message":"41","line":19,"column":5,"nodeType":"42","endLine":19,"endColumn":19,"suggestions":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"40","severity":1,"message":"48","line":25,"column":5,"nodeType":"42","endLine":25,"endColumn":39,"suggestions":"49"},{"ruleId":"40","severity":1,"message":"50","line":25,"column":6,"nodeType":"51","endLine":25,"endColumn":38},{"ruleId":"52","severity":1,"message":"53","line":7,"column":17,"nodeType":"54","messageId":"55","endLine":7,"endColumn":25},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'state.currentPiece' and 'state.pieces'. Either include them or remove the dependency array.","ArrayExpression",["56"],"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"React Hook useEffect has a missing dependency: 'markFinishedPieces'. Either include it or remove the dependency array.",["59"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",{"desc":"60","fix":"61"},"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [state.currentPiece, state.isEdit, state.pieces]",{"range":"64","text":"65"},"Update the dependencies array to be: [markFinishedPieces]",{"range":"66","text":"67"},[597,611],"[state.currentPiece, state.isEdit, state.pieces]",[792,826],"[markFinishedPieces]"]